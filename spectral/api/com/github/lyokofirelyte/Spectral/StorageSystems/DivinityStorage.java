package com.github.lyokofirelyte.Spectral.StorageSystems;

import java.util.List;
import java.util.UUID;

import org.bukkit.Location;
import org.bukkit.configuration.Configuration;
import org.bukkit.configuration.ConfigurationSection;
import org.bukkit.inventory.ItemStack;

public interface DivinityStorage extends Configuration, ConfigurationSection {
	
	/**
	 * @return The name of the class, this will return differently based on the type <br />
	 * Example: divAlliance.name() may return "Winhaven" while divPlayer.name() would return "Hugh_Jasses"
	 */
	public String name();
	
	/**
	 * @return The Player UUID generated by Minecraft for this player
	 */
	public UUID uuid();
	
	/**
	 * @return boolean on if this is a DivinityGame or not.
	 */
	public boolean isGame();
	
	/**
	 * @return If isGame() is true, this will return the name of the game
	 */
	public String gameName();
	
	/**
	 * @return An object stored with set() not covered by other methods <br />
	 * Example: Map<String, String> map = getRawInfo(DPI.TEMP_MAP); <br />
	 * <b>DELETE ANYTHING THAT USES THIS METHOD BEFORE SHUTDOWN</b>
	 */
	public Object getRawInfo(Enum<?> i);
	
	/**
	 * @return The string value of the supplied enum key <br />
	 * Example: String name = getStr(DPI.DISPLAY_NAME);
	 */
	public String getStr(Enum<?> i);
	
	/**
	 * @return The integer value of the supplied enum key <br />
	 * Example: int balace = getInt(DPI.BALANCE);
	 */
	public int getInt(Enum<?> i);
	
	/**
	 * @return The long value of the supplied enum key <br />
	 * Example: long cooldown = getLong(DPI.SUPER_BREAKER_CD);
	 */
	public long getLong(Enum<?> i);
	
	/**
	 * @return The byte value of the supplied enum key <br />
	 * Example: byte data = getByte(DPI.BLOCK_DATA);
	 */
	public byte getByte(Enum<?> i);
	
	/**
	 * @return The double value of the supplied enum key <br />
	 * Example: double score = getDouble(DPI.SPLEEF_SCORE);
	 */
	public double getDouble(Enum<?> i);
	
	/**
	 * @return The boolean value of the supplied enum key <br />
	 * Example: boolean canUse = getBool(DPI.IS_COOLDOWN_COMPLETE);
	 */
	public boolean getBool(Enum<?> i);

	/**
	 * @return The list value of the supplied enum key <br />
	 * Example: List chests = getList(DPI.OWNED_CHESTS);
	 */
	public List<String> getList(Enum<?> i);
	
	/**
	 * @return The location value of the supplied enum key <br />
	 * Example: Location homeLoc = getLoc(DPI.SOME_LOCATION);
	 */
	public Location getLoc(Enum<?> i);

	/**
	 * @return The itemstack value of the supplied enum key <br />
	 * Example: ItemStack inventory = getStack(DPI.BACKUP_INVENTORY);
	 */
	public List<ItemStack> getStack(Enum<?> i);
	
	/**
	 * Set a value using an enum key. <br />
	 * Example: set(DPI.BALANCE, 1000);
	 */
	public void set(Enum<?> i, Object infos);
	
	/**
	 * Set a value using a string key <br />
	 * Example: set("path.something", 100);
	 */
	public void set(String path, Object infos);
	
	/**
	 * @return A boolean determining if the YAML version of the storage object contains the given path
	 */
	public boolean contains(String path);
	
	/**
	 * @return The configuration section from the YAML version of the storage object
	 */
	public ConfigurationSection getConfigurationSection(String path);
}